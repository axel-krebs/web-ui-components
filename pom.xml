<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.akrebs.testing</groupId>
    <artifactId>sposo-uilib</artifactId>
    <version>0.0.1</version>
    <name>sposo-uilib</name>
    <url>http://www-axel-krebs.de/sposo</url>
    <packaging>jar</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <webpack.env>prod</webpack.env>
        <!-- typescript target directory -->
        <target.web.compiled>${basedir}/target/compiled</target.web.compiled>
        <!-- webpack target directory -->
        <target.web.build>${basedir}/target/published</target.web.build>
        <maven-deploy-plugin.version>3.0.0-M1</maven-deploy-plugin.version>
    </properties>

    <distributionManagement>
        <repository>
            <uniqueVersion>false</uniqueVersion>
            <id>sposo-comp-jslib</id>
            <name>SpoSo-repository</name>
            <url>http://dl.bintray.com/axel-krebs/sport-social-repo/</url>
            <layout>default</layout>
         </repository>
    </distributionManagement>

    <dependencies>
        <!-- done via npm, see package.json -->
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <!-- The output of the resource action should reflect the WebJars standard. -->
        <resources>
            <resource>
                <directory>${basedir}/src/main/resource</directory>
                <includes>
                    <include>**</include>
                </includes>
                <targetPath>META-INF/resources/webjars/${project.artifactId}/${project.version}/src</targetPath>
            </resource>
            <resource>
                <directory>${target.web.build}</directory>
                <includes>
                    <include>**</include>
                </includes>
                <targetPath>META-INF/resources/webjars/${project.artifactId}/${project.version}</targetPath>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.4.1</version>
                <executions>
                    <execution>
                        <id>default-clean</id>
                        <phase>clean</phase>
                    </execution>
                </executions>
            </plugin>
            <!-- skip JAVA compile -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <!-- Use the latest released version:
                https://repo1.maven.org/maven2/com/github/eirslett/frontend-maven-plugin/ -->
                <version>1.9.1</version>
                <executions>
                    <execution>
                        <!-- optional: you don't really need execution ids, but it looks nice in your build log. -->
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <!-- optional: default phase is "generate-resources" -->
                        <phase>generate-resources</phase>
                    </execution>
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>

                        <!-- optional: default phase is "generate-resources" -->
                        <phase>generate-resources</phase>

                        <configuration>
                            <!-- optional: The default argument is actually
                            "install", so unless you need to run some other npm command,
                            you can remove this whole <configuration> section.
                            -->
                            <arguments>install</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>webpack build</id>
                        <goals>
                            <goal>webpack</goal>
                        </goals>

                        <!-- optional: the default phase is "generate-resources" -->
                        <phase>generate-resources</phase>
                    </execution>
                </executions>
                <configuration>
                    <nodeVersion>v8.17.0</nodeVersion>

                    <!-- optional: with node version greater than 4.0.0 will use npm provided by node distribution -->
                    <npmVersion>6.13.4</npmVersion>
                    <workingDirectory>${basedir}</workingDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
